CFLAGS="-march=native -O2 -pipe"
CXXFLAGS="${CFLAGS}"
CHOST="x86_64-pc-linux-gnu"
CPU_FLAGS_X86="aes avx avx2 fma3 mmx mmxext pclmul popcnt sse sse2 sse3 sse4_1 sse4_2 ssse3"
MAKEOPTS="-j9"
EMERGE_DEFAULT_OPTS="--jobs 2"

#Assuming INSTALL_MASK contains more items represented by ellipsis:
INSTALL_MASK="/lib/systemd /usr/lib/systemd"

MUTT="gpg pop mbox nntp smime"
INTEL="glamour -vaapi" #vaapi only radeon and t.d
LAYMAN="sync-plugin-portage git"
WIRESHARK="nghttp2 sshdump"
XSRV="gtk gtk3 -gnome -qt -qt4 -qt5 -qt3support -kde gnome-keyring" # consolekit"
VIRT="-headless vnc qemu spice usbredir"
OTHER4="-gpm"
OTHER3="-ldap -aufs policykit lvm"
PGP="yubikey smartcard pkcs11 tofu"
OTHER2="lock sessoin jpeg dbus startup-notification thunar windowmode -subversion"
OTHER="python truetype tty-helpers -bindist icu vim vim-pager vim-syntax evdev"
PULSEAUDIO="alsa native-headset ofono-headset"
SSYSTEM="acpi lm_sensors udev threads symlink cryptsetup device-mapper urandom usb iproute2 -systemd"
NETWORK="dhcpcd ap wifi nfsv4 nfsv41 bluetooth"
FORMAT="vpx theora vorbis x264 mp3 rar"
NOTEBOOK="nvidia opengl v4l v4l2 pulseaudio networkmanager"
FPERL="ithreads" #bug in build openssl
USE="${OTHER} ${OTHER2} ${OTHER3} ${OTHER4} ${SSYSTEM} ${NOTEBOOK} ${XSRV} ${NETWORK} ${FORMAT} ${VIRT} ${WIRESHARK} ${LAYMAN} ${INTEL} ${PULSEAUDIO} ${MUTT} ${PGP} ${FPERL}"
#USE="pulseaudio avahi python icu networkmanager ieee1394 lm_sensors bindist gtk ${XSRV} alsa"

QEMU_SOFTMMU_TARGETS="x86_64"
QEMU_USER_TARGETS="x86_64"

PYTHON_TARGETS="python2_7 python3_5 python3_6"

ALSA_CARDS="hda-intel usb-audio"
INPUT_DEVICES="evdev synaptics libinput mouse keyboard v4l joystick udev elographics mutouch"
#VIDEO_CARDS="intel i965 fbdev nvidia"
VIDEO_CARDS="intel i965 nvidia"

XFCE_PLUGINS="brightnes clock trash" 

GRUB_PLATFORMS="efi-64 pc"
ACCEPT_LICENSE="* @EULA"
LINGUAS="en"
L10N="en ru us"

# collision-protect - prevent a package from overwriting files it does not own
# ipc-sandbox - prevent host IPC access (requires Linux and namespace support in kernel)
# network-sandbox - prevent network access during merge (requires Linux and network namespace support in kernel)
# sandbox - ensure package does not write directly to live system
# split-log - store logs created by PORTAGE_ELOG_SYSTEM="save" in category subdirectories
# split-elog - store build logs in category subdirectories
# strict - have portage react strongly to conditions that have the potential to be dangerous
# test - run package tests, or alternatively test-fail-continue
# userfetch - drop privileges during fetching
# userpriv - drop privileges during merge
# usersandbox - enable sandbox when userpriv is enabled
# clean-logs -
FEATURES="userfetch split-elog clean-logs buildpkg"

PORT_LOGDIR_CLEAN="find \"\${PORT_LOGDIR}\" -type f ! -name \"summary.log*\" -mtime +14 -delete"

PORTAGE_ELOG_CLASSES="warn error info"
PORTAGE_ELOG_SYSTEM="save"
PORT_LOGDIR="/var/log/portage"
PORTAGE_TMPDIR="/var/tmp"
PORTDIR="/usr/portage"
DISTDIR="${PORTDIR}/distfiles"
PKGDIR="${PORTDIR}/packages"

GENTOO_MIRRORS="http://mirror.yandex.ru/gentoo-distfiles/"
